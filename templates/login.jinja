<!-- 
Log in page
-->
{% extends 'base.jinja' %}

{% block content %}
    <style>
        html, body {
            height: 100%;  /* Use full height of the window */
            margin: 0;  /* Remove default margin */
            display: flex;  /* Enable Flexbox */
            flex-direction: column;  /* Align children vertically */
            justify-content: center;  /* Center horizontally */
            align-items: center;  /* Center vertically */
            font-family: 'Open Sans', sans-serif;
            background-color: #A8D0E6;  /* Light blue background */
        }

        h1 {
            text-align: center;  /* Center the heading text horizontally */
            font-family: 'Open Sans', sans-serif;
            color: white; /* Ensure text is readable on background */
            padding: 20px 40px; /* Add padding to make the text more prominent */
            border-radius: 10px; /* Rounded corners for aesthetic */
            display: flex; /* Use Flexbox inside h1 */
            align-items: center; /* Center text vertically */
            justify-content: center; /* Center text horizontally */
        }
        p {
            text-align: center;  /* Center paragraph text */
            font-family: 'Open Sans', sans-serif;
            color: white; /* Ensure text is readable on background */
            font-size: 20px;
            font-weight: bold;  /* Make text bold */
        }

        a.button {
            padding: 10px 20px;
            background-color: #F76C6C; 
            color: white;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            font-size: 16px;
            transition: background-color 0.3s, color 0.3s;
        }

        a.button:hover {
            background-color: #e56c6c; 
            color: #ffffff;
        }
        
    </style>
    <h1>Login</h1>
    <p>Username</p>
    <input id="username" type="text"/>
    <p>Password</p>
    <input id="password" type="password"/>
    <p><a href="#" class="button" onclick="login()">Login</a></p>


    <!-- Include Crypto-JS for hashing password client-side -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


    <script>
        function isValidURL(string) {
            if (string.length === 0) {
                return false;
            }
            if (string[0] === "/") {
                return true;  // Allow relative URLs
            }
            try {
                new URL(string);
                return true;  // URL is well-formed
            } catch (_) {
                return false;  // Malformed URL
            }
        }
        async function getSalt(username) {
            try {
                let response = await axios.post('/get_salt', { username: username });
                if (response.data.salt) {
                    return response.data.salt;
                } else {
                    throw new Error('Salt not found or no username provided');
                }
            } catch (error) {
                console.error('Error fetching salt:', error);
                return null; // Handle error appropriately
            }
        }

        async function login() {
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            // First, get the salt for the user
            const salt = await getSalt(username);
            if (!salt) {
                alert('User does not exist');
                return;
            }

            // Hash the password with the salt
            const saltedPassword = password + salt;
            const hashedPassword = CryptoJS.SHA256(saltedPassword).toString();

            let loginURL = "{{ url_for('login_user') }}";
            try {
                let response = await axios.post(loginURL, {
                    username: username,
                    password: hashedPassword  // Send the salted and hashed password
                });

                // Handle the response as before
                if (response.data && response.data.redirect) {
                    window.location.href = response.data.redirect;
                } else if (response.data && response.data.error) {
                    alert(response.data.error);
                } else {
                    console.log('Unexpected response:', response.data);
                    alert("An unexpected error occurred.");
                }
            } catch (error) {
                console.error('Login error:', error);
                if (error.response && error.response.data) {
                    alert(error.response.data);
                } else {
                    alert('An unknown error occurred. Please try again.');
                }
            }
        }

    </script>

    <script>
        setTimeout(function() {
            alert('Session timed out. You will be redirected to the homepage.');
            window.location.href = '{{ url_for("index") }}'; // Redirect to the index page
        }, 180000); // 180000 milliseconds = 3 minutes
    </script>
{% endblock %}